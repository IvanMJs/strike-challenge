import { getToken } from './authService';

const API_URL = 'http://localhost:4000/api/vulnerabilities';

const getHeaders = () => {
  const token = getToken();
  return {
    'Content-Type': 'application/json',
    'Authorization': token ? `Bearer ${token}` : ''
  };
};

export async function fetchVulnerabilities() {
  const res = await fetch(API_URL, {
    headers: getHeaders()
  });
  if (!res.ok) throw new Error('Failed to fetch vulnerabilities');
  return res.json();
}

export interface VulnerabilityData {
  id?: number;
  title: string;
  description?: string;
  criticality?: string;
  cwe?: string;
  suggestedFix?: string;
  status: string;
  createdAt?: Date;
  updatedAt?: Date;
}

export async function createVulnerability(data: VulnerabilityData): Promise<VulnerabilityData> {  const res = await fetch(API_URL, {
    method: 'POST',
    headers: getHeaders(),
    body: JSON.stringify(data),
  });
  if (!res.ok) {
    const errorData = await res.json();
    throw new Error(errorData.error || 'Failed to create vulnerability');
  }
  return res.json();
}

export async function updateVulnerability(id: string, data: VulnerabilityData): Promise<VulnerabilityData> {  const res = await fetch(`${API_URL}/${id}`, {
    method: 'PUT',
    headers: getHeaders(),
    body: JSON.stringify(data),
  });
  if (!res.ok) {
    const errorData = await res.json();
    throw new Error(errorData.error || 'Failed to update vulnerability');
  }
  return res.json();
}

export async function deleteVulnerability(id: string): Promise<void> {
  try {
    const res = await fetch(`${API_URL}/${id}`, {
      method: 'DELETE',
      headers: getHeaders()
    });
    
    if (!res.ok) {
      const errorData = await res.json().catch(() => ({ error: 'Unknown error' }));
      console.error('Delete request failed:', {
        status: res.status,
        statusText: res.statusText,
        error: errorData
      });
      throw new Error(errorData.error || `Failed to delete vulnerability: ${res.status} ${res.statusText}`);
    }
  } catch (error) {
    console.error('Delete request error:', error);
    throw error;
  }
}
