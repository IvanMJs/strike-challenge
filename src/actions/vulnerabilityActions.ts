import { Vulnerability } from '../types/models.js';
import { VulnerabilityAction } from '../types/vulnerability.js';

export const setVulnerabilities = (vulnerabilities: Vulnerability[]): VulnerabilityAction => ({
  type: 'SET_VULNERABILITIES',
  payload: vulnerabilities
});

export const setLoading = (loading: boolean): VulnerabilityAction => ({
  type: 'SET_LOADING',
  payload: loading
});

export const setError = (error: string): VulnerabilityAction => ({
  type: 'SET_ERROR',
  payload: error
});

export const addVulnerability = (vulnerability: Vulnerability): VulnerabilityAction => ({
  type: 'ADD_VULNERABILITY',
  payload: vulnerability
});

export const updateVulnerability = (vulnerability: Vulnerability): VulnerabilityAction => ({
  type: 'UPDATE_VULNERABILITY',
  payload: vulnerability
});

export const deleteVulnerability = (id: string): VulnerabilityAction => ({
  type: 'DELETE_VULNERABILITY',
  payload: id
});

export const setFilters = (filters: Partial<{
  status: string;
  criticality: string;
  search: string;
}>): VulnerabilityAction => ({
  type: 'SET_FILTERS',
  payload: filters
});
