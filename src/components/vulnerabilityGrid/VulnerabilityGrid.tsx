import React from 'react';
import VulnerabilityCard from '../vulnerabilityCard/VulnerabilityCard';
import './VulnerabilityGrid.scss';

import { Vulnerability } from '../../types/models';
import { VulnerabilityState } from '../../types/constants';

interface VulnerabilityGridProps {
  vulnerabilities: Vulnerability[];
  onEdit: (vulnerability: Vulnerability) => void;
  onDelete: (id: number) => void;
  onStatusChange: (id: number, status: VulnerabilityState) => void;
  loading?: boolean;
}

const VulnerabilityGrid: React.FC<VulnerabilityGridProps> = ({
  vulnerabilities,
  onEdit,
  onDelete,
  onStatusChange,
  loading
}) => {
  if (loading) return <div className="empty">Loading...</div>;
  if (!vulnerabilities.length) return <div className="empty">No vulnerabilities found.</div>;

  return (
    <div className="vuln-grid">
      {vulnerabilities.map(vuln => (
        <VulnerabilityCard
          key={vuln.id}
          vulnerability={vuln}
          onEdit={onEdit}
          onDelete={onDelete}
          onStatusChange={onStatusChange}
        />
      ))}
    </div>
  );
};

export default VulnerabilityGrid;
