import React, { FormEvent } from "react";
import "./VulnerabilityForm.scss";
import { STATES, CWE_OPTIONS } from "../../utils/constants";
import { VulnerabilityState } from "../../types/constants";

export interface VulnerabilityFormProps {
  form: {
    title: string;
    criticality: string;
    cwe: string;
    suggestedFix: string;
    status: VulnerabilityState;
    description: string;
  };
  onChange: (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => void;
  onSubmit: (e: FormEvent) => void;
  editing: boolean;
  criticalityOptions: string[];
}

const VulnerabilityForm: React.FC<VulnerabilityFormProps> = ({
  form,
  onChange,
  onSubmit,
  editing,
  criticalityOptions
}) => {
  return (
    <form className="vuln-form" onSubmit={onSubmit}>
      <h2>{editing ? "Edit" : "Add"} Vulnerability</h2>
      <div className="vuln-form-grid">
        <div className="form-row">
          <div className="form-group">
            <label htmlFor="title">Title</label>
            <input
              type="text"
              id="title"
              name="title"
              value={form.title}
              onChange={onChange}
              placeholder="Enter title"
              required
              maxLength={100}
            />
          </div>

          <div className="form-group">
            <label htmlFor="criticality">Criticality</label>
            <select
              id="criticality"
              name="criticality"
              value={form.criticality}
              onChange={onChange}
              className={form.criticality ? `criticality-${form.criticality.toLowerCase()}` : ''}
            >
              <option value="">Select Criticality</option>
              {criticalityOptions.map((option) => (
                <option key={option} value={option}>
                  {option}
                </option>
              ))}
            </select>
          </div>
        </div>

        <div className="form-row">
          <div className="form-group">
            <label htmlFor="status">Status</label>
            <select
              id="status"
              name="status"
              value={form.status}
              onChange={onChange}
              required
            >
              <option value="">Select Status</option>
              {Object.values(STATES).map((state) => (
                <option key={state} value={state}>
                  {state}
                </option>
              ))}
            </select>
          </div>

          <div className="form-group">
            <label htmlFor="cwe">CWE</label>
            <select
              id="cwe"
              name="cwe"
              value={form.cwe}
              onChange={onChange}
            >
              <option value="">Select CWE</option>
              {CWE_OPTIONS.map((cwe) => (
                <option key={cwe} value={cwe}>
                  {cwe}
                </option>
              ))}
            </select>
          </div>
        </div>        <div className="form-row form-row-full">
          <div className="form-group">
            <label htmlFor="description">Description</label>
            <textarea
              id="description"
              name="description"
              value={form.description}
              onChange={onChange}
              placeholder="Enter vulnerability description"
              required
              rows={2}
            />
          </div>
          <div className="form-group">
            <label htmlFor="suggestedFix">Suggested Fix</label>
            <textarea
              id="suggestedFix"
              name="suggestedFix"
              value={form.suggestedFix}
              onChange={onChange}
              placeholder="Enter suggested fix"
              rows={2}
            />
          </div>
        </div>

        <div className="form-group-actions">
          <button type="submit" className="submit-btn">
            {editing ? "Update" : "Add"} Vulnerability
          </button>
        </div>
      </div>
    </form>
  );
};

export default VulnerabilityForm;
