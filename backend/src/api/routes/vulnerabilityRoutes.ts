import express from 'express';
import type { Request, Response, NextFunction } from 'express';
import * as vulnerabilityController from '../controllers/vulnerabilityController';
import { VulnerabilityRequest } from '../../domain/interfaces/vulnerability';

type ParamsWithId = {
  id: string;
} & Record<string, string>;

const router = express.Router();

// GET all vulnerabilities
router.get('/', (req: Request, res: Response) => {
  vulnerabilityController.getAllVulnerabilities(req, res);
});

// GET single vulnerability by ID
router.get('/:id', (req: Request<ParamsWithId>, res: Response) => {
  vulnerabilityController.getVulnerabilityById(req, res);
});

// POST create new vulnerability
router.post('/', (req: Request<{}, {}, VulnerabilityRequest>, res: Response) => {
  vulnerabilityController.createVulnerability(req, res);
});

// PUT update vulnerability
router.put('/:id', (req: Request<ParamsWithId, {}, Partial<VulnerabilityRequest>>, res: Response) => {
  vulnerabilityController.updateVulnerability(req, res);
});

// DELETE vulnerability
router.delete('/:id', (req: Request<ParamsWithId>, res: Response) => {
  vulnerabilityController.deleteVulnerability(req, res);
});

export { router as vulnerabilityRoutes };