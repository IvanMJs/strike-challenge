import React from 'react';
import VulnerabilityCard from '../vulnerabilityCard/VulnerabilityCard';
import { VulnerabilityGridProps } from '../../types/vulnerability';
import './VulnerabilityGrid.scss';

export default function VulnerabilityGrid({ vulnerabilities, STATES, onEdit, onDelete, onStatusChange }: VulnerabilityGridProps) {
  if (!vulnerabilities || !vulnerabilities.length) return <div className="empty">No vulnerabilities found.</div>;  // Remove any potential duplicates by ID
  const uniqueVulnerabilities = vulnerabilities.reduce((acc, current) => {
    const x = acc.find(item => item.id === current.id);
    if (!x) {
      return acc.concat([current]);
    }
    return acc;
  }, [] as typeof vulnerabilities);

  return (
    <div className="vuln-grid">
      {uniqueVulnerabilities.map(vuln => (
        <VulnerabilityCard
          key={`vuln-${vuln.id}`}
          vuln={vuln}
          STATES={STATES}
          onEdit={onEdit}
          onDelete={onDelete}
          onStatusChange={onStatusChange}
        />
      ))}
    </div>
  );
}
