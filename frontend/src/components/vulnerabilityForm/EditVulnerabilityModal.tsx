import React, { useState, useEffect } from 'react';
import { Vulnerability } from '../../types/vulnerability';
import { VulnerabilityState } from '../../types/constants';
import './EditVulnerabilityModal.scss';

interface EditVulnerabilityModalProps {
    vulnerability: Vulnerability;
    isOpen: boolean;
    onClose: () => void;
    onSave: (updatedVulnerability: Vulnerability) => void;
    STATES: Record<string, VulnerabilityState>;
}

export default function EditVulnerabilityModal({ 
    vulnerability, 
    isOpen, 
    onClose, 
    onSave,
    STATES 
}: EditVulnerabilityModalProps) {
    const [formData, setFormData] = useState<Vulnerability>(vulnerability);

    useEffect(() => {
        setFormData(vulnerability);
    }, [vulnerability]);

    if (!isOpen) return null;

    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
        e.preventDefault();
        onSave(formData);
    };

    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
        const { name, value } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: value
        }));
    };

    return (
        <div className="modal-backdrop">
            <div className="modal-container" data-testid="edit-vulnerability-modal">
                <div className="modal-header">
                    <h2>Edit Vulnerability</h2>
                </div>
                <div className="modal-body">
                    <form onSubmit={handleSubmit} data-testid="edit-vulnerability-form">
                        <div className="form-group">
                            <label htmlFor="title">Title</label>
                            <input
                                id="title"
                                name="title"
                                type="text"
                                value={formData.title}
                                onChange={handleChange}
                                required
                            />
                        </div>
                        <div className="form-group">
                            <label htmlFor="description">Description</label>
                            <textarea
                                id="description"
                                name="description"
                                rows={4}
                                value={formData.description}
                                onChange={handleChange}
                                required
                            />
                        </div>
                        <div className={`form-group criticality-${formData.criticality?.toLowerCase()}`}>
                            <label htmlFor="criticality">Criticality</label>
                            <select
                                id="criticality"
                                name="criticality"
                                value={formData.criticality}
                                onChange={handleChange}
                                required
                            >
                                <option value="">Select criticality</option>
                                <option value="High">High</option>
                                <option value="Medium">Medium</option>
                                <option value="Low">Low</option>
                            </select>
                        </div>
                        <div className="form-group">
                            <label htmlFor="status">Status</label>
                            <select
                                id="status"
                                name="status"
                                value={formData.status}
                                onChange={handleChange}
                                required
                            >
                                <option value="">Select status</option>
                                {Object.values(STATES).map(state => (
                                    <option key={state} value={state}>
                                        {state}
                                    </option>
                                ))}
                            </select>
                        </div>
                        <div className="form-group">
                            <label htmlFor="cwe">CWE</label>
                            <select
                                id="cwe"
                                name="cwe"
                                value={formData.cwe}
                                onChange={handleChange}
                                required
                            >
                                <option value="">Select CWE</option>
                                <option value="CWE-79">CWE-79</option>
                                <option value="CWE-89">CWE-89</option>
                                <option value="CWE-22">CWE-22</option>
                                <option value="CWE-200">CWE-200</option>
                                <option value="CWE-287">CWE-287</option>
                                <option value="CWE-352">CWE-352</option>
                                <option value="CWE-502">CWE-502</option>
                                <option value="CWE-611">CWE-611</option>
                                <option value="CWE-798">CWE-798</option>
                                <option value="CWE-434">CWE-434</option>
                            </select>
                        </div>
                        <div className="form-group">
                            <label htmlFor="suggestedFix">Suggested Fix</label>
                            <textarea
                                id="suggestedFix"
                                name="suggestedFix"
                                rows={4}
                                value={formData.suggestedFix || ''}
                                onChange={handleChange}
                            />
                        </div>
                        <div className="modal-footer">
                            <button type="button" className="btn-cancel" onClick={onClose}>
                                Cancel
                            </button>
                            <button type="submit" className="btn-save">
                                Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    );
};
